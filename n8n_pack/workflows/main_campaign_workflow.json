{
  "name": "Main Campaign Workflow",
  "nodes": [
    {
      "parameters": {},
      "id": "workflow-start",
      "name": "Campaign Trigger",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [100, 300]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "url": "={{ $vars.AGENT_BASE_URL }}/agents/campaign-strategy-planner",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpBearerAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "contentType": "json",
        "jsonBody": "={{ JSON.stringify({\n  goal: $json.goal || 'Grow petition signatures by 20% in 14 days',\n  constraints: ['No targeted persuasion', 'Stick to Tier A/B sources'],\n  audiences: ['General public'],\n  timeframe_days: 14,\n  brand_tone: 'clear, respectful',\n  prompt_version: '1.0.0'\n}) }}"
      },
      "id": "strategy-planner",
      "name": "1. Strategy Planner",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [300, 300]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "url": "={{ $vars.AGENT_BASE_URL }}/agents/content-production",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpBearerAuth",
        "sendBody": true,
        "contentType": "json",
        "jsonBody": "={{ JSON.stringify({\n  plan_id: $('strategy-planner').item.json.plan_id,\n  task_bundle: $('strategy-planner').item.json.daily_runbook[0].tasks,\n  brand_tone: 'clear, respectful'\n}) }}"
      },
      "id": "content-producer",
      "name": "2. Content Producer",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [500, 300]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "url": "={{ $vars.AGENT_BASE_URL }}/agents/policy-fact-check",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpBearerAuth",
        "sendBody": true,
        "contentType": "json",
        "jsonBody": "={{ JSON.stringify({\n  claim_text: $('content-producer').item.json.assets[0].content,\n  context: 'Content verification for campaign',\n  required_confidence: 0.9\n}) }}"
      },
      "id": "fact-check-gate",
      "name": "üîç Fact Check Gate",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [500, 450]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $('fact-check-gate').item.json.result }}",
              "operation": "equal",
              "value2": "supported"
            }
          ]
        }
      },
      "id": "verification-gate",
      "name": "‚úÖ Verification Gate",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [700, 450]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "url": "={{ $vars.AGENT_BASE_URL }}/agents/compliance-legal",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpBearerAuth",
        "sendBody": true,
        "contentType": "json",
        "jsonBody": "={{ JSON.stringify({\n  content: $('content-producer').item.json,\n  content_type: 'campaign_content'\n}) }}"
      },
      "id": "compliance-check",
      "name": "‚öñÔ∏è Compliance Check",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [900, 350]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "url": "={{ $vars.AGENT_BASE_URL }}/agents/narrative-development",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpBearerAuth",
        "sendBody": true,
        "contentType": "json",
        "jsonBody": "={{ JSON.stringify({\n  bundle_id: $('content-producer').item.json.bundle_id,\n  script_md: $('content-producer').item.json.assets[0].content,\n  audience: 'general public',\n  length_seconds: 60\n}) }}"
      },
      "id": "narrative-dev",
      "name": "3. Narrative Development",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1100, 300]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "url": "={{ $vars.AGENT_BASE_URL }}/agents/visual-design",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpBearerAuth",
        "sendBody": true,
        "contentType": "json",
        "jsonBody": "={{ JSON.stringify({\n  narrative_id: $('narrative-dev').item.json.narrative_id,\n  beats: $('narrative-dev').item.json.beats,\n  voiceover_script: $('narrative-dev').item.json.voiceover_script\n}) }}"
      },
      "id": "visual-design",
      "name": "4. Visual Design",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1300, 300]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "url": "={{ $vars.AGENT_BASE_URL }}/agents/social-media-deployment",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpBearerAuth",
        "sendBody": true,
        "contentType": "json",
        "jsonBody": "={{ JSON.stringify({\n  design_id: $('visual-design').item.json.design_id,\n  assets: $('visual-design').item.json.thumbnails,\n  copy: $('narrative-dev').item.json.voiceover_script,\n  platforms: ['tiktok', 'youtube', 'instagram']\n}) }}"
      },
      "id": "social-deployment",
      "name": "5. Social Media Deploy",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1500, 300]
    },
    {
      "parameters": {
        "message": "Campaign content creation failed verification. Content: {{ $json }}",
        "subject": "‚ö†Ô∏è Campaign Verification Failed"
      },
      "id": "alert-failed",
      "name": "‚ö†Ô∏è Alert: Failed Verification",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [900, 550]
    }
  ],
  "connections": {
    "Campaign Trigger": {
      "main": [
        [
          {
            "node": "1. Strategy Planner",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "1. Strategy Planner": {
      "main": [
        [
          {
            "node": "2. Content Producer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "2. Content Producer": {
      "main": [
        [
          {
            "node": "üîç Fact Check Gate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üîç Fact Check Gate": {
      "main": [
        [
          {
            "node": "‚úÖ Verification Gate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚úÖ Verification Gate": {
      "main": [
        [
          {
            "node": "‚öñÔ∏è Compliance Check",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "‚ö†Ô∏è Alert: Failed Verification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚öñÔ∏è Compliance Check": {
      "main": [
        [
          {
            "node": "3. Narrative Development",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "3. Narrative Development": {
      "main": [
        [
          {
            "node": "4. Visual Design",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "4. Visual Design": {
      "main": [
        [
          {
            "node": "5. Social Media Deploy",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {},
  "versionId": "1.0.0",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "id": "main-campaign-workflow",
  "tags": ["campaign", "unburden-america", "verification"]
}
